// <auto-generated />
using System;
using AutoGallery.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AutoGallery.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AutoGallery.Entity.Admin", b =>
                {
                    b.Property<int>("admin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("admin_mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("admin_password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("admin_userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("admin_id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("AutoGallery.Entity.Car", b =>
                {
                    b.Property<int>("car_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("car_brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_damage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_door")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_driverLicense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_fuel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_gear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_km")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_money")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_plakaNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_traction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("car_id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("AutoGallery.Entity.Customer", b =>
                {
                    b.Property<int>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("customer_adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_dateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_driverLicense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_licenseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_tcNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customer_id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("AutoGallery.Entity.RentACar", b =>
                {
                    b.Property<int>("rentACar_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Carscar_id")
                        .HasColumnType("int");

                    b.Property<int?>("Customerscustomer_id")
                        .HasColumnType("int");

                    b.Property<int>("car_id")
                        .HasColumnType("int");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("rent_deliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("rent_purchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("rent_totalMoney")
                        .HasColumnType("real");

                    b.HasKey("rentACar_id");

                    b.HasIndex("Carscar_id");

                    b.HasIndex("Customerscustomer_id");

                    b.ToTable("rentACars");
                });

            modelBuilder.Entity("AutoGallery.Entity.RentACar", b =>
                {
                    b.HasOne("AutoGallery.Entity.Car", "Cars")
                        .WithMany("RentACars")
                        .HasForeignKey("Carscar_id");

                    b.HasOne("AutoGallery.Entity.Customer", "Customers")
                        .WithMany("RentACars")
                        .HasForeignKey("Customerscustomer_id");
                });
#pragma warning restore 612, 618
        }
    }
}
